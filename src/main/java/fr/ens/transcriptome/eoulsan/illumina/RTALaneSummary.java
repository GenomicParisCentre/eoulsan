/*
 *                  Eoulsan development code
 *
 * This code may be freely distributed and modified under the
 * terms of the GNU Lesser General Public License version 2.1 or
 * later and CeCILL-C. This should be distributed with the code.
 * If you do not have a copy, see:
 *
 *      http://www.gnu.org/licenses/lgpl-2.1.txt
 *      http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.txt
 *
 * Copyright for this code is held jointly by the Genomic platform
 * of the Institut de Biologie de l'École Normale Supérieure and
 * the individual authors. These should be listed in @author doc
 * comments.
 *
 * For more information on the Eoulsan project and its aims,
 * or to join the Eoulsan Google group, visit the home page
 * at:
 *
 *      http://www.transcriptome.ens.fr/eoulsan
 *
 */

package fr.ens.transcriptome.eoulsan.illumina;

import org.w3c.dom.Element;

import fr.ens.transcriptome.eoulsan.util.XMLUtils;

/**
 * This class contains information about the summary generated by RTA about a
 * lane.
 * @since 1.1
 * @author Laurent Jourdren
 */
public class RTALaneSummary {

  private final int read;
  private final double densityRatio;

  private int lane = 1;
  private int tileCount = 32;
  private int clustersRaw = 2473686;
  private double clustersRawSD = 212239.4;
  private int clustersPF = 2379034;
  private double clustersPFSD = 197679.6;
  private double prcPFClusters = 96.2;
  private double prcPFClustersSD = 0.30;
  private double phasing = 0.421;
  private double prephasing = 0.224;
  private int calledCyclesMin = 50;
  private int calledCyclesMax = 50;
  private double prcAlign = 99.03;
  private double prcAlignSD = 0.004;
  private double errRatePhiX = 0.15;
  private double errRatePhiXSD = 0.008;
  private double errRate35 = 0.11;
  private double errRate35SD = 0.003;
  private double errRate75 = 0.00;
  private double errRate75SD = 0.000;
  private double errRate100 = 0.00;
  private double errRate100SD = 0.000;
  private int firstCycleIntPF = 9110;
  private double firstCycleIntPFSD = 363.9;
  private double prcIntensityAfter20CyclesPF = 77.5;
  private double prcIntensityAfter20CyclesPFSD = 0.87;

  //
  // Getters
  //

  /**
   * @return Returns the lane
   */
  public int getLane() {
    return this.lane;
  }

  /**
   * @return Returns the tileCount
   */
  public int getTileCount() {
    return this.tileCount;
  }

  /**
   * @return Returns the clustersRaw
   */
  public int getClustersRaw() {
    return this.clustersRaw;
  }

  /**
   * @return Returns the intClustersRawSD
   */
  public double getClustersRawSD() {
    return this.clustersRawSD;
  }

  /**
   * @return Returns the clustersPF
   */
  public int getClustersPF() {
    return this.clustersPF;
  }

  /**
   * @return Returns the clustersPFSD
   */
  public double getClustersPFSD() {
    return this.clustersPFSD;
  }

  /**
   * @return Returns the prcPFClusters
   */
  public double getPrcPFClusters() {
    return this.prcPFClusters;
  }

  /**
   * @return Returns the prcPFClustersSD
   */
  public double getPrcPFClustersSD() {
    return this.prcPFClustersSD;
  }

  /**
   * @return Returns the phasing
   */
  public double getPhasing() {
    return this.phasing;
  }

  /**
   * @return Returns the prephasing
   */
  public double getPrephasing() {
    return this.prephasing;
  }

  /**
   * @return Returns the calledCyclesMin
   */
  public int getCalledCyclesMin() {
    return this.calledCyclesMin;
  }

  /**
   * @return Returns the calledCyclesMax
   */
  public int getCalledCyclesMax() {
    return this.calledCyclesMax;
  }

  /**
   * @return Returns the prcAlign
   */
  public double getPrcAlign() {
    return this.prcAlign;
  }

  /**
   * @return Returns the prcAlignSD
   */
  public double getPrcAlignSD() {
    return this.prcAlignSD;
  }

  /**
   * @return Returns the errRatePhiX
   */
  public double getErrRatePhiX() {
    return this.errRatePhiX;
  }

  /**
   * @return Returns the errRatePhiXSD
   */
  public double getErrRatePhiXSD() {
    return this.errRatePhiXSD;
  }

  /**
   * @return Returns the errRate35
   */
  public double getErrRate35() {
    return this.errRate35;
  }

  /**
   * @return Returns the errRate35SD
   */
  public double getErrRate35SD() {
    return this.errRate35SD;
  }

  /**
   * @return Returns the errRate75
   */
  public double getErrRate75() {
    return this.errRate75;
  }

  /**
   * @return Returns the errRate75SD
   */
  public double getErrRate75SD() {
    return this.errRate75SD;
  }

  /**
   * @return Returns the errRate100
   */
  public double getErrRate100() {
    return this.errRate100;
  }

  /**
   * @return Returns the errRate100SD
   */
  public double getErrRate100SD() {
    return this.errRate100SD;
  }

  /**
   * @return Returns the firstCycleIntPF
   */
  public int getFirstCycleIntPF() {
    return this.firstCycleIntPF;
  }

  /**
   * @return Returns the firstCycleIntPFSD
   */
  public double getFirstCycleIntPFSD() {
    return this.firstCycleIntPFSD;
  }

  /**
   * @return Returns the prcIntensityAfter20CyclesPF
   */
  public double getPrcIntensityAfter20CyclesPF() {
    return this.prcIntensityAfter20CyclesPF;
  }

  /**
   * @return Returns the prcIntensityAfter20CyclesPFSD
   */
  public double getPrcIntensityAfter20CyclesPFSD() {
    return this.prcIntensityAfter20CyclesPFSD;
  }

  //
  // Parsing methods
  //

  public void parse(final Element e) {

    for (String key : XMLUtils.getAttributeNames(e)) {

      final String value = e.getAttribute(key);

      switch (key) {
      case "key":
        this.lane = Integer.parseInt(value);
        break;
      case "TileCount":
        this.tileCount = Integer.parseInt(value);
        break;
      case "ClustersRaw":
        this.clustersRaw = Integer.parseInt(value);
        break;
      case "ClustersRawSD":
        this.clustersRawSD = Double.parseDouble(value);
        break;
      case "ClustersPF":
        this.clustersPF = Integer.parseInt(value);
        break;
      case "ClustersPFSD":
        this.clustersPFSD = Double.parseDouble(value);
        break;
      case "PrcPFClusters":
        this.prcPFClusters = Double.parseDouble(value);
        break;
      case "PrcPFClustersSD":
        this.prcPFClustersSD = Double.parseDouble(value);
        break;
      case "Phasing":
        this.phasing = Double.parseDouble(value);
        break;
      case "Prephasing":
        this.prephasing = Double.parseDouble(value);
        break;
      case "CalledCyclesMin":
        this.calledCyclesMin = Integer.parseInt(value);
        break;
      case "CalledCyclesMax":
        this.calledCyclesMax = Integer.parseInt(value);
        break;
      case "PrcAlign":
        this.prcAlign = Double.parseDouble(value);
        break;
      case "PrcAlignSD":
        this.prcAlignSD = Double.parseDouble(value);
        break;
      case "ErrRatePhiX":
        this.errRatePhiX = Double.parseDouble(value);
        break;
      case "ErrRatePhiXSD":
        this.errRatePhiXSD = Double.parseDouble(value);
        break;
      case "ErrRate35":
        this.errRate35 = Double.parseDouble(value);
        break;
      case "ErrRate35SD":
        this.errRate35SD = Double.parseDouble(value);
        break;
      case "ErrRate75":
        this.errRate75 = Double.parseDouble(value);
        break;
      case "ErrRate75SD":
        this.errRate75SD = Double.parseDouble(value);
        break;
      case "ErrRate100":
        this.errRate100 = Double.parseDouble(value);
        break;
      case "ErrRate100SD":
        this.errRate100SD = Double.parseDouble(value);
        break;
      case "FirstCycleIntPF":
        this.firstCycleIntPF = Integer.parseInt(value);
        break;
      case "FirstCycleIntPFSD":
        this.firstCycleIntPFSD = Double.parseDouble(value);
        break;
      case "PrcIntensityAfter20CyclesPF":
        this.prcIntensityAfter20CyclesPF = Double.parseDouble(value);
        break;
      case "PrcIntensityAfter20CyclesPFSD":
        this.prcIntensityAfter20CyclesPFSD = Double.parseDouble(value);
        break;
      }
    }

  }

  //
  // Object methods
  //

  public String toHeaderString() {

    return "Lane\tRead\tTiles\t"
        + "Mean Clu.Dens. (K/mm2)\tSD Clu.Dens. (K/mm2)\t"
        + "Mean % PF Clusters\tSD % PF Clusters\t"
        + "Mean Clusters PF\tSD Clusters PF\t" + "% Phas.\tPreph.\t"
        + "Cycles Err Rated\t" + "% Aligned\tSD % Aligned\t"
        + "% Error Rate\tSD % Error Rate\t" + "% Error Rate 35 cycle\t"
        + "SD % Error Rate 35 cycle\t"
        + "% Error Rate 75 cycle\tSD % Error Rate 75 cycle\t"
        + "% Error Rate 100 cycle\tSD % Error Rate 100 cycle\t"
        + "1st Cycle Int\tSD 1st Cycle Int\t"
        + "% Intensity Cycle 20\tSD % Intensity Cycle 20";
  }

  @Override
  public String toString() {

    return String
        .format(
            "%d\t%d\t%d\t%.0f\t%.1f\t%.1f\t%.2f\t%.1f\t%.2f\t%.3f\t%.3f\t%d%s\t%.2f\t%.3f\t"
                + "%.2f\t%.3f\t%.2f\t%.3f\t%.2f\t%.3f\t%.2f\t%.3f\t"
                + "%d\t%.1f\t%.1f\t%.2f", this.lane, this.read, this.tileCount,
            this.clustersRaw * this.densityRatio / 1000.0, this.clustersRawSD
                * this.densityRatio / 1000, this.prcPFClusters,
            this.prcPFClustersSD, this.clustersPF * this.densityRatio / 1000.0,
            this.clustersPFSD * this.densityRatio / 1000.0, this.phasing,
            this.prephasing, this.calledCyclesMin,
            this.calledCyclesMax > this.calledCyclesMin ? "-"
                + this.calledCyclesMax : "", this.prcAlign, this.prcAlignSD,
            this.errRatePhiX, this.errRatePhiXSD, this.errRate35,
            this.errRate35SD, this.errRate75, this.errRate75SD,
            this.errRate100, this.errRate100, this.firstCycleIntPF,
            this.firstCycleIntPFSD, this.prcIntensityAfter20CyclesPF,
            this.prcIntensityAfter20CyclesPFSD);
  }

  //
  // Constructor
  //

  public RTALaneSummary(final int read, final double densityRatio) {
    this.read = read;
    this.densityRatio = densityRatio;
  }

}
