<?xml version="1.0" encoding="UTF-8"?>
<!--
/*
 *                  Eoulsan development code
 *
 * This code may be freely distributed and modified under the
 * terms of the GNU Lesser General Public License version 2.1 or
 * later and CeCILL-C. This should be distributed with the code.
 * If you do not have a copy, see:
 *
 *      http://www.gnu.org/licenses/lgpl-2.1.txt
 *      http://www.cecill.info/licences/Licence_CeCILL-C_V1-en.txt
 *
 * Copyright for this code is held jointly by the Genomic platform
 * of the Institut de Biologie de l'École Normale Supérieure and
 * the individual authors. These should be listed in @author doc
 * comments.
 *
 * For more information on the Eoulsan project and its aims,
 * or to join the Eoulsan Google group, visit the home page
 * at:
 *
 *      http://www.transcriptome.ens.fr/eoulsan
 *
 */
-->
<document>

  <properties>
    <title>Workflow file</title>
    <author email="jourdren@biologie.ens.fr">Laurent Jourdren</author>
  </properties>



  <body>

    <section name="The workflow file">

      <p>The workflow file (usually named as <b>workflow.xml</b>) is the file where all the steps to execute and theirs parameters will be set. This file use the XML syntax and is divided in 3 sections : </p>


      <ul>
        <li>The <a href="#descsection">description section</a> that contains information about the name, the description and the author of the workflow file.</li>
        <li>The <a href="#constantssection">constants section</a> that contains constants that can be used in parameters values.</li>
        <li>The <a href="#stepssection">steps section</a> that contain the list of the steps to execute and theirs parameters. The parameters of the built-in steps are described in the <a href="./steps.html">Built-in steps</a> section.</li>
        <li>The <a href="#globalsection">global section</a> that contains global parameters (override configuration settings) that can be use in all the steps of the analysis.</li>
     </ul>

	<p>In all parameter values you can use variables (e.g. <code>${variable}</code>) that contains values for : </p>
	<ul>
		<li>Built-in variables (<code>${eoulsan.version}</code>,
		  <code>${eoulsan.build.number}</code>, <code>${eoulsan.build.date}</code>,
		  <code>${design.file.path}</code>, <code>${workflow.file.path}</code>,
		  <code>${output.path}</code>, <code>${job.path}</code>,
		  <code>${job.id}</code>, <code>${job.uuid}</code> and <code>${available.processors}</code>)</li>
		<li><a href="http://docs.oracle.com/javase/6/docs/api/java/lang/System.html#getProperty(java.lang.String)">java properties</a> (e.g. <code>${java.version}</code>)</li>
		<li>System environment variables (e.g. <code>${PATH}</code>, <code>${PWD}</code>)</li>
		<li><a href="#constantssection">user defined constants</a></li>
	</ul>
	<p>User can also insert in parameter values the output of a shell command with expression between "<b>`</b>":</p>
	<source>
	 &lt;value&gt;`cat /proc/cpuinfo | grep processor | wc -l`&lt;/value&gt;
	 &lt;value&gt;`pwd`/tmp&lt;/value&gt;
	 &lt;value&gt;`basedir ${user.home}`/tmp&lt;/value&gt;</source>

	<p>All the tags must be in lower case. The following source show the structure of a typical <b>workflow.xml</b> file:</p>

<source>
&lt;analysis&gt;
    &lt;formatversion&gt;1.0&lt;/formatversion&gt;
    &lt;name&gt;my analysis&lt;/name&gt;
    &lt;description&gt;Demo analysis&lt;/description&gt;
    &lt;author&gt;Laurent Jourdren&lt;/author&gt;

    &lt;constants&gt;
        &lt;parameter&gt;
	        &lt;name&gt;my.constant&lt;/name&gt;
	        &lt;value&gt;myconstantvalue&lt;/value&gt;
        &lt;/parameter&gt;
    &lt;/constants&gt;


    &lt;steps&gt;

        &lt;!-- Filter reads --&gt;
        &lt;step id="filterreads" skip="false"&gt;
                &lt;name&gt;filterreads&lt;/name&gt;
                &lt;parameters&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;trim.length.threshold&lt;/name&gt;
                                &lt;value&gt;11&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;quality.threshold&lt;/name&gt;
                                &lt;value&gt;12&lt;/value&gt;
                        &lt;/parameter&gt;
                &lt;/parameters&gt;
        &lt;/step&gt;

        &lt;!-- Map reads --&gt;
        &lt;step id="mapreads" skip="false"&gt;
                &lt;name&gt;mapreads&lt;/name&gt;
                &lt;parameters&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;mapper&lt;/name&gt;
                                &lt;value&gt;bowtie&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;mapper.arguments&lt;/name&gt;
                                &lt;value&gt;--best -k 2&lt;/value&gt;
                        &lt;/parameter&gt;
                &lt;/parameters&gt;
        &lt;/step&gt;

        &lt;!-- SAM filter --&gt;
        &lt;step id="filtersam"  skip="false"&gt;
                &lt;name&gt;filtersam&lt;/name&gt;
                &lt;parameters&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;removeunmapped&lt;/name&gt;
                                &lt;value&gt;&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;removemultimatches&lt;/name&gt;
                                &lt;value&gt;&lt;/value&gt;
                        &lt;/parameter&gt;
                &lt;/parameters&gt;
        &lt;/step&gt;

        &lt;!-- Expression --&gt;
        &lt;step id="expression" skip="false"&gt;
                &lt;name&gt;expression&lt;/name&gt;
                &lt;parameters&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;counter&lt;/name&gt;
                                &lt;value&gt;htseq-count&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;genomictype&lt;/name&gt;
                                &lt;value&gt;gene&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;attributeid&lt;/name&gt;
                                &lt;value&gt;ID&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;stranded&lt;/name&gt;
                                &lt;value&gt;no&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;overlapmode&lt;/name&gt;
                                &lt;value&gt;union&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;removeambiguouscases&lt;/name&gt;
                                &lt;value&gt;true&lt;/value&gt;
                        &lt;/parameter&gt;
                &lt;/parameters&gt;
        &lt;/step&gt;

        &lt;!-- Normalization --&gt;
        &lt;step id="normalization" skip="false"&gt;
                &lt;name&gt;normalization&lt;/name&gt;
                &lt;parameters/&gt;
        &lt;/step&gt;

        &lt;!-- Diffana --&gt;
        &lt;step id="diffana" skip="false"&gt;
                &lt;name&gt;diffana&lt;/name&gt;

                &lt;parameters&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;disp.est.method&lt;/name&gt;
                                &lt;value&gt;pooled&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;disp.est.sharing.mode&lt;/name&gt;
                                &lt;value&gt;maximum&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name>disp.est.fit.type&lt;/name&gt;
                                &lt;value>local&lt;/value&gt;
                        &lt;/parameter&gt;
                &lt;/parameters&gt;
        &lt;/step&gt;


    &lt;/steps&gt;

    &lt;globals&gt;
        &lt;parameter&gt;
	        &lt;name&gt;main.tmp.dir&lt;/name&gt;
	        &lt;value&gt;/tmp&lt;/value&gt;
        &lt;/parameter&gt;
    &lt;/globals&gt;

&lt;/analysis&gt;</source>

     <a name="descsection" />
     <subsection name="Description section">

	<p>The first tags of the workflow file allow to set some information about the file:</p>

        <ul>
                <li><b>formatversion:</b> The version of the format of this workflow file.</li>
                <li><b>name:</b> The name of this workflow file.</li>
                <li><b>description:</b> The description of this workflow file.</li>
                <li><b>author:</b> The author of this workflow file.</li>
        </ul>

     </subsection>

     <a name="constantssection" />
     <subsection name="Constants section">

		<p>The constant section allow to define additional variables that can be used in the values of the parameters with the <code>${variable}</code> syntax.
		Previously defined constants (and other variables) can be used in a new constant.</p>
        <p>Note that the constants section is optional.</p>

 <source>
    &lt;constants&gt;
        &lt;parameter&gt;
	        &lt;name&gt;my.constant1&lt;/name&gt;
	        &lt;value&gt;foo&lt;/value&gt;
        &lt;/parameter&gt;
         &lt;parameter&gt;
	        &lt;name&gt;my.constant2&lt;/name&gt;
	        &lt;value&gt;${my.constant1}-bar&lt;/value&gt;
        &lt;/parameter&gt;
    &lt;/constants&gt;
 </source>

     </subsection>

	<a name="stepssection" />
    <subsection name="Steps section">

	<p>The steps section contains the list all the steps to execute. Each step has a name and parameters and optionnaly a version and inputs:</p>

        <table>
          <tr><th>Tag</th><th>Type</th><th>Optional</th><th>Description</th></tr>
          <tr><td>name</td><td>string</td><td>False</td><td>The name of the step</td></tr>
          <tr><td>version</td><td>string</td><td>True</td><td>The version of the step to use</td></tr>
          <tr><td>inputs</td><td>XML tags</td><td>True</td><td>Manually define the data sources to use by the step</td></tr>
          <tr><td>parameters</td><td>XML tags</td><td>True</td><td>The parameters of the step</td></tr>
        </table>

        <p>The step tag can have 3 optional attributes:</p>

        <table>
          <tr><th>Attribute</th><th>Type</th><th>Default value</th><th>Description</th></tr>
          <tr><td>id</td><td>string</td><td>The name of the step</td><td>This value define the identifier of the step. The id value must be unique in a workflow. The identifier is used to named output filenames of the step</td></tr>
          <tr><td>discardoutput</td><td>boolean</td><td>false</td><td>When this attribute is set to true, the output files of the step will be saved in the working directory instead of the output directory of the workflow and will be removed at the end of the workflow if successful</td></tr>
          <tr><td>skip</td><td>boolean</td><td>false</td><td>The <tt>skip</tt> attribute allow to skip a step if its value is set to true</td></tr>
          <tr><td>requiredprocs</td><td>integer</td><td>-1</td><td>The <tt>requiredprocs</tt> attribute allow to set the number of processors to use by the step. 
            This value is only used in <b>clusterexec</b> mode and for steps in <b>local mode</b> that handle their parallelization like the mapping step.
            By default in <b>clusterexec</b> mode, one processor will be used to process each step.</td></tr>
          <tr><td>requiredmemory</td><td>integer</td><td>-1</td><td>The <tt>requiredmemory</tt> attribute allow to set the amount of memory required in megabytes by the step. 
            This value is only used in <b>clusterexec</b> mode. If not set, Eoulsan will require to the cluster scheduler the same amount of memory allocated to Eoulsan JVM.
            Unit prefixes like MB, M, GB, G can be used for the required memory value (e.g. 8GB).</td></tr>
        </table>

    <p>If not set by the user, the Eoulsan workflow engine will take as data source for each input port the last previous step that generate data of the format that requested by the input port.
       If the user do not want to use the last source of data, it can manually define using <tt>input</tt> tags and its <tt>port</tt>, <tt>fromstep</tt> and <tt>fromport</tt> subtags.</p>

<source>

    &lt;steps&gt;

        &lt;!-- Filter reads --&gt;
        &lt;step id="myfilterreadstep" discardoutput="true"  skip="false"&gt;
                &lt;name&gt;filterreads&lt;/name&gt;
                &lt;version&gt;@@@VERSION@@@&lt;/version&gt;
                &lt;parameters&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;trim.length.threshold&lt;/name&gt;
                                &lt;value&gt;11&lt;/value&gt;
                        &lt;/parameter&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;quality.threshold&lt;/name&gt;
                                &lt;value&gt;12&lt;/value&gt;
                        &lt;/parameter&gt;
                &lt;/parameters&gt;
        &lt;/step&gt;

        &lt;!-- Map reads --&gt;
        &lt;step id="mapping" skip="false" requiredprocs="4" requiredmemory="8GB"&gt;
                &lt;name&gt;mapreads&lt;/name&gt;
                &lt;version&gt;@@@VERSION@@@&lt;/version&gt;

                &lt;inputs&gt;
                        &lt;input&gt;
                                &lt;port&gt;reads&lt;/port&gt;
                                &lt;fromstep&gt;myfilterreadstep&lt;/fromstep&gt;
                                &lt;fromport&gt;output&lt;/fromport&gt;
                        &lt;/input&gt;
                &lt;/inputs&gt;

                &lt;parameters&gt;
                        &lt;parameter&gt;
                                &lt;name&gt;mapper&lt;/name&gt;
                                &lt;value&gt;soap&lt;/value&gt;
                        &lt;/parameter&gt;
                &lt;/parameters&gt;
        &lt;/step&gt;

        ...

    &lt;/steps&gt;

</source>



     </subsection>

     <a name="globalsection" />
     <subsection name="Global parameter section">

	<p>The global parameter section contains parameters that are shared by all the steps. The syntax of the global parameters is the same as in the steps.</p>

<source>
    &lt;globals&gt;
        &lt;parameter&gt;
	        &lt;name&gt;main.tmp.dir&lt;/name&gt;
	        &lt;value&gt;/home/jourdren/tmp&lt;/value&gt;
        &lt;/parameter&gt;
    &lt;/globals&gt;</source>

     </subsection>

	<p>The global parameters override the values of the configuration file. For more information about the configuration file see the <a href="conffile.html">configuration file page</a>.</p>


    </section>

  </body>

</document>
